#–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
# –±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—â–µ–Ω–∏—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π

import os
import dotenv

import telebot
from telebot import types  # types - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
import requests
from bs4 import BeautifulSoup as BS

import game

# –ö–æ–º–∞–Ω–¥–∞ dotenv.find_dotenv() –Ω–∞—Ö–æ–¥–∏—Ç —Ñ–∞–π–ª .env    –í–º–µ—Å—Ç–æ –Ω–µ–µ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å dotenv.load_dotenv('.env')
dotenv.load_dotenv(dotenv.find_dotenv())
# –ù–∞—Ö–æ–¥–∏–º –∫–ª—é—á –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π bot. –ê–ª—å—Ç–µ–Ω–∞—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å bot = os.getenv('bot_token')
BOT_TOKEN = os.environ['BOT_TOKEN']

# –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é bot –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–µ–µ –∫–ª—é—á –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN) # https://t.me/Companion_1st_bot

# –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@bot.message_handler(commands=['start'])
# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
def start(message):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é  –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    if message.from_user.last_name is None:
        mess = f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>'
    else:
        mess = f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name} <u>{message.from_user.last_name}</u></b>'

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # –≤ send_message –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä —Å–æ–æ–±—â.
    # –ß–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∞–µ–º id —á–∞—Ç–∞ –∏ –≤ –Ω–µ–≥–æ –∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    # –í—Ç–æ—Ä—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    # –¢—Ä–µ—Ç–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º - —Ä–µ–∂–∏–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –∏–ª–∏ html,
    # —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–≥–∏
    bot.send_message(message.chat.id, mess, parse_mode='html')


@bot.message_handler(commands=['talk'])
def com2(message):
    rmk = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
    rmk.add(types.KeyboardButton("–î–∞"),types.KeyboardButton("–ù–µ—Ç"))
    msg = bot.send_message(message.chat.id, "–ñ–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∞—Ç—å –±–µ—Å–µ–¥—É?", reply_markup = rmk)
    # –£–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ —Ñ—É–Ω–∫—Ü–∏—é, –≤ –∫–æ—Ç–æ—Ä—É—é –µ–µ –Ω–∞–¥–æ –ø–µ—Ä–µ–¥–∞—Ç—å
    bot.register_next_step_handler(msg, user_answer)

def user_answer(message):
    #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.text == '–î–∞':
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
        rmk.add(types.KeyboardButton("–û –ø–æ–≥–æ–¥–µ"), types.KeyboardButton("–•–æ—á—É –∞–Ω–µ–∫–¥–æ—Ç"), types.KeyboardButton("–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –±–µ—Å–µ–¥—É"))
        msg = bot.send_message(message.chat.id, "–û —á–µ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?", reply_markup=rmk)
        bot.register_next_step_handler(msg, about)
    elif message.text == '–ù–µ—Ç':
        rmk = types.ReplyKeyboardRemove(selective=False)  # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.send_message(message.chat.id, '–ó–Ω–∞—á–∏—Ç –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üëã', reply_markup=rmk)
    else:
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
        rmk.add(types.KeyboardButton("–û –ø–æ–≥–æ–¥–µ"), types.KeyboardButton("–•–æ—á—É –∞–Ω–µ–∫–¥–æ—Ç"), types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
        msg = bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é üòï", reply_markup=rmk)
        bot.register_next_step_handler(msg, user_answer)
        # bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é')

def about(message):
    if message.text == '–û –ø–æ–≥–æ–¥–µ':
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
        rmk.add(types.KeyboardButton("–û –ø–æ–≥–æ–¥–µ"), types.KeyboardButton("–•–æ—á—É –∞–Ω–µ–∫–¥–æ—Ç"), types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
        msg = bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –Ω–∏—à—Ç—è–∫", reply_markup=rmk)
        bot.register_next_step_handler(msg, about)

        # bot.send_message(message.chat.id, '–ü–æ–≥–æ–¥–∞ –Ω–∏—à—Ç—è–∫')
    elif message.text == '–•–æ—á—É –∞–Ω–µ–∫–¥–æ—Ç' or message.text == '–•–æ—á—É –µ—â—ë –∞–Ω–µ–∫–¥–æ—Ç':
        bot.send_chat_action(message.chat.id, 'typing') # –ü–æ–∫–∞ –≤—ã–ø–æ–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –±–æ—Ç "...–ø–µ—á–∞—Ç–∞–µ—Ç"
        url = 'https://www.anekdot.ru/random/anekdot/'
        response = requests.get(url)
        soup = BS(response.content, 'lxml')
        joke = soup.find('div', class_='text').text.strip()

        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
        rmk.add(types.KeyboardButton("–û –ø–æ–≥–æ–¥–µ"), types.KeyboardButton("–•–æ—á—É –µ—â—ë –∞–Ω–µ–∫–¥–æ—Ç"), types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
        msg = bot.send_message(message.chat.id, joke, reply_markup=rmk)
        bot.register_next_step_handler(msg, about)

        # bot.send_message(message.chat.id, '–ó–∞—Ö–æ–¥—è—Ç –¥–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –≤ –±–∞—Ä...')

    elif message.text == '–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é':
        rmk = types.ReplyKeyboardRemove(selective=False)  # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é', reply_markup=rmk)
    else:
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 2)
        rmk.add(types.KeyboardButton("–û –ø–æ–≥–æ–¥–µ"), types.KeyboardButton("–•–æ—á—É –∞–Ω–µ–∫–¥–æ—Ç"), types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
        msg = bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é üòï", reply_markup=rmk)
        bot.register_next_step_handler(msg, about)


#–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (? —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞—á–µ–º –Ω—É–∂–Ω–æ –∏ –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å)
# bot.enable_save_next_step_handlers(delay=2)
# bot.load_next_step_handlers()
# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –Ω–∞ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
bot.polling(none_stop=True)
